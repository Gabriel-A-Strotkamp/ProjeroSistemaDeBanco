/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.ifsul.lpoo.view;

import br.edu.ifsul.lpoo.control.PersistenciaJPA;
import br.edu.ifsul.lpoo.model.Clientes;
import br.edu.ifsul.lpoo.model.Contas;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Jennifer Ebertz
 */
public class CaixaEletronicoJF extends javax.swing.JFrame {

    PersistenciaJPA jpa;
    Clientes cliente = new Clientes();
    Contas conta = new Contas();
    
    public void setClinete(Clientes c){
        this.cliente = c;
        
        localizaConta();
    }
    /**
     * Creates new form CaixaEletronico
     */
    public CaixaEletronicoJF() {
        jpa = new PersistenciaJPA();
        initComponents();
        
        lblcontatxt.setText(conta.getNumero());
        lblNometxt.setText(cliente.getNome());
        lblcpftxt.setText(cliente.getCpf());
        if (conta.getTipoConta() != null) {
            lblTipoConta.setText(conta.getTipoConta().toString());
        } else {
            lblTipoConta.setText("Tipo não definido");
        }
        lblSCredito.setText(String.valueOf(conta.getSaldoCredito()));
        lblSDebito.setText(String.valueOf(conta.getSaldoDebito()));
        
    }
    
    public boolean localizaConta() {
        boolean existe = false;
        
        
        // Obtém o número do crachá digitado pelo usuário
        Integer nConta = cliente.getId();

        // Obtém a lista de Conta do banco de dados
        List<Contas> listaContas = jpa.getContas();

        // Verifica se a lista de funcionários não é nula (erro na persistência)
        if (listaContas != null) {
            // Itera sobre a lista de funcionários para encontrar uma correspondência
            for (Contas c : listaContas) {
                // Compara o texto digitado no campo com o número do crachá do funcionário
                if (nConta.equals(c.getProprietario())) {
                    existe = true; // Funcionário encontrado
                    conta = c; // Atribui o funcionário encontrado à variável global
                    break; // Sai do loop assim que encontrar o funcionário
                }
            }
        } else {
            // Mensagem de erro se a lista de funcionários não puder ser carregada
            JOptionPane.showMessageDialog(this, "Erro ao carregar lista de Contas. Verifique o console.", "Erro", JOptionPane.ERROR_MESSAGE);
            System.err.println("Erro: jpa.getFuncionarios() retornou null.");
        }
        return existe;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        lblTitulo = new javax.swing.JLabel();
        lblconta = new javax.swing.JLabel();
        lblCpfTitular = new javax.swing.JLabel();
        lblNomeTitular = new javax.swing.JLabel();
        lblSaldos = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblTipoConta = new javax.swing.JLabel();
        btnSacar = new javax.swing.JButton();
        btnDepositar = new javax.swing.JButton();
        btnsair = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lblSCredito = new javax.swing.JLabel();
        lblSDebito = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblcontatxt = new javax.swing.JLabel();
        lblNometxt = new javax.swing.JLabel();
        lblcpftxt = new javax.swing.JLabel();
        lbltipotxt = new javax.swing.JLabel();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitulo.setText("Caixa Eletronico!");

        lblconta.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblconta.setText("Número da Conta:");

        lblCpfTitular.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCpfTitular.setText("CPF Titular:");

        lblNomeTitular.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblNomeTitular.setText("Nome Titular:");

        lblSaldos.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblSaldos.setText("Saldos da Conta:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Crédito:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Débito:");

        lblTipoConta.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTipoConta.setText("Tipo de Conta:");

        btnSacar.setText("Sacar");
        btnSacar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacarActionPerformed(evt);
            }
        });

        btnDepositar.setText("Depositar");
        btnDepositar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepositarActionPerformed(evt);
            }
        });

        btnsair.setText("Sair");
        btnsair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(23, 23, 23)
                                .addComponent(lblSDebito, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSacar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDepositar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblconta)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel5))
                                    .addComponent(lblNomeTitular)
                                    .addComponent(lblCpfTitular)
                                    .addComponent(lblTipoConta))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblcontatxt, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                    .addComponent(lblNometxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblcpftxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbltipotxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(lblSaldos))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(176, 176, 176)
                                        .addComponent(jLabel4))
                                    .addComponent(lblSCredito, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnsair)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(lblTitulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblcontatxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblconta)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNomeTitular)
                    .addComponent(lblNometxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCpfTitular)
                    .addComponent(lblcpftxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTipoConta)
                    .addComponent(lbltipotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(lblSaldos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSCredito, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(lblSDebito, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSacar)
                    .addComponent(btnDepositar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnsair)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnsairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsairActionPerformed
        dispose();
    }//GEN-LAST:event_btnsairActionPerformed

    private void btnSacarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacarActionPerformed
      // Verificar se o usuário digitou algo e não cancelou
      String valorDigitado = JOptionPane.showInputDialog(this, "Informe o valor para saque:", "Sacar", JOptionPane.PLAIN_MESSAGE);

       if (valorDigitado != null && !valorDigitado.trim().isEmpty()) {

    // Primeiro, confirmar a senha da conta
    String senhaDigitada = JOptionPane.showInputDialog(this, "Digite a senha da conta:", "Confirmação de Senha", JOptionPane.PLAIN_MESSAGE);

    if (senhaDigitada != null && senhaDigitada.equals(conta.getSenha())) {

        try {
            // Converter o valor digitado de String para float
            float valorSaque = Float.parseFloat(valorDigitado.replace(",", "."));

            // Obter o saldo atual de débito
            float saldoAtual = conta.getSaldoDebito();

            // Validar se o valor do saque é positivo e menor ou igual ao saldo disponível
            if (valorSaque > 0 && valorSaque <= saldoAtual) {

                conta.setSaldoDebito(saldoAtual - valorSaque);

                JOptionPane.showMessageDialog(this, 
                    "Saque de R$ " + String.format("%.2f", valorSaque) + " realizado com sucesso!", 
                    "Saque Confirmado", 
                    JOptionPane.INFORMATION_MESSAGE);

                // Aqui você pode atualizar a interface gráfica com o novo saldo
                // Exemplo: lblSaldoDebito.setText(String.format("R$ %.2f", conta.getSaldoDebito()));

            } else if (valorSaque <= 0) {
                JOptionPane.showMessageDialog(this, 
                    "O valor do saque deve ser positivo.", 
                    "Valor Inválido", 
                    JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, 
                    "Saldo insuficiente para realizar o saque.\nSaldo disponível: R$ " + 
                    String.format("%.2f", saldoAtual), 
                    "Saldo Insuficiente", 
                    JOptionPane.WARNING_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                "Valor inválido. Por favor, digite um número.", 
                "Erro de Formato", 
                JOptionPane.ERROR_MESSAGE);
        }

    } else if (senhaDigitada != null) {
        // Senha errada (mas não cancelada)
        JOptionPane.showMessageDialog(this, 
            "Senha incorreta. Operação cancelada.", 
            "Erro de Autenticação", 
            JOptionPane.ERROR_MESSAGE);
    }
    // Se senhaDigitada == null, o usuário cancelou o JOptionPane — não faz nada.
}
    }//GEN-LAST:event_btnSacarActionPerformed

    private void btnDepositarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepositarActionPerformed
    String valorDigitado = JOptionPane.showInputDialog(this, "Informe o valor para depósito:", "Depositar", JOptionPane.PLAIN_MESSAGE);

    if (valorDigitado != null && !valorDigitado.trim().isEmpty()) {

        String senhaDigitada = JOptionPane.showInputDialog(this, "Digite a senha da conta:", "Confirmação de Senha", JOptionPane.PLAIN_MESSAGE);

        if (senhaDigitada != null && senhaDigitada.equals(conta.getSenha())) {

            try {
                float valorDeposito = Float.parseFloat(valorDigitado.replace(",", "."));

                if (valorDeposito > 0) {
                    float saldoAtual = conta.getSaldoDebito();
                    conta.setSaldoDebito(saldoAtual + valorDeposito);

                    JOptionPane.showMessageDialog(this, 
                        "Depósito de R$ " + String.format("%.2f", valorDeposito) + " realizado com sucesso!", 
                        "Depósito Confirmado", 
                        JOptionPane.INFORMATION_MESSAGE);

                    // Atualize aqui seu JLabel, se necessário

                } else {
                    JOptionPane.showMessageDialog(this, 
                        "O valor do depósito deve ser positivo.", 
                        "Valor Inválido", 
                        JOptionPane.WARNING_MESSAGE);
                }

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, 
                    "Valor inválido. Por favor, digite um número.", 
                    "Erro de Formato", 
                    JOptionPane.ERROR_MESSAGE);
            }

        } else if (senhaDigitada != null) {
            JOptionPane.showMessageDialog(this, 
                "Senha incorreta. Operação cancelada.", 
                "Erro de Autenticação", 
                JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_btnDepositarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CaixaEletronicoJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CaixaEletronicoJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CaixaEletronicoJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CaixaEletronicoJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CaixaEletronicoJF().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDepositar;
    private javax.swing.JButton btnSacar;
    private javax.swing.JButton btnsair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JLabel lblCpfTitular;
    private javax.swing.JLabel lblNomeTitular;
    private javax.swing.JLabel lblNometxt;
    private javax.swing.JLabel lblSCredito;
    private javax.swing.JLabel lblSDebito;
    private javax.swing.JLabel lblSaldos;
    private javax.swing.JLabel lblTipoConta;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblconta;
    private javax.swing.JLabel lblcontatxt;
    private javax.swing.JLabel lblcpftxt;
    private javax.swing.JLabel lbltipotxt;
    // End of variables declaration//GEN-END:variables
}
